/*
 * DeployRClient
 * Integration technology for deploying R and Python analytics inside web, desktop, mobile, and dashboard applications as well as backend systems. Turn your R or Python scripts into analytics web services, so code can be easily executed by applications running on a secure server.  The core APIs can be grouped into several categories, including: [Authentication](#authentication-apis), [Web Services](#services-management-apis), [Sessions](#session-apis), [Snapshots](#snapshot-apis), [Status](#status-apis), and [Centralized Configuration](#centralized-configuration-apis). 
 *
 * OpenAPI spec version: 9.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ParameterDefinition;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * WebService
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-28T05:42:17.706Z")
public class WebService {
  @SerializedName("name")
  private String name = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("versionPublishedBy")
  private String versionPublishedBy = null;

  @SerializedName("creationTime")
  private String creationTime = null;

  @SerializedName("snapshotId")
  private String snapshotId = null;

  /**
   * Type of the runtime.
   */
  @JsonAdapter(RuntimeTypeEnum.Adapter.class)
  public enum RuntimeTypeEnum {
    R("R"),
    
    PYTHON("Python"),
    
    REALTIME("Realtime");

    private String value;

    RuntimeTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RuntimeTypeEnum fromValue(String text) {
      for (RuntimeTypeEnum b : RuntimeTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RuntimeTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RuntimeTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RuntimeTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RuntimeTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("runtimeType")
  private RuntimeTypeEnum runtimeType = null;

  @SerializedName("initCode")
  private String initCode = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("operationId")
  private String operationId = null;

  @SerializedName("inputParameterDefinitions")
  private List<ParameterDefinition> inputParameterDefinitions = null;

  @SerializedName("outputParameterDefinitions")
  private List<ParameterDefinition> outputParameterDefinitions = null;

  @SerializedName("outputFileNames")
  private List<String> outputFileNames = null;

  @SerializedName("myPermissionOnService")
  private String myPermissionOnService = null;

  public WebService name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the published service.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name of the published service.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public WebService version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Version of the Published Service.
   * @return version
  **/
  @ApiModelProperty(required = true, value = "Version of the Published Service.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public WebService versionPublishedBy(String versionPublishedBy) {
    this.versionPublishedBy = versionPublishedBy;
    return this;
  }

   /**
   * Username of the user who published this version of the published web-service.
   * @return versionPublishedBy
  **/
  @ApiModelProperty(value = "Username of the user who published this version of the published web-service.")
  public String getVersionPublishedBy() {
    return versionPublishedBy;
  }

  public void setVersionPublishedBy(String versionPublishedBy) {
    this.versionPublishedBy = versionPublishedBy;
  }

  public WebService creationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

   /**
   * Creation time for the service.
   * @return creationTime
  **/
  @ApiModelProperty(value = "Creation time for the service.")
  public String getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(String creationTime) {
    this.creationTime = creationTime;
  }

  public WebService snapshotId(String snapshotId) {
    this.snapshotId = snapshotId;
    return this;
  }

   /**
   * ID of the snapshot to be used for service.
   * @return snapshotId
  **/
  @ApiModelProperty(value = "ID of the snapshot to be used for service.")
  public String getSnapshotId() {
    return snapshotId;
  }

  public void setSnapshotId(String snapshotId) {
    this.snapshotId = snapshotId;
  }

  public WebService runtimeType(RuntimeTypeEnum runtimeType) {
    this.runtimeType = runtimeType;
    return this;
  }

   /**
   * Type of the runtime.
   * @return runtimeType
  **/
  @ApiModelProperty(value = "Type of the runtime.")
  public RuntimeTypeEnum getRuntimeType() {
    return runtimeType;
  }

  public void setRuntimeType(RuntimeTypeEnum runtimeType) {
    this.runtimeType = runtimeType;
  }

  public WebService initCode(String initCode) {
    this.initCode = initCode;
    return this;
  }

   /**
   * Code to execute before the request. Specific to the runtime type.
   * @return initCode
  **/
  @ApiModelProperty(value = "Code to execute before the request. Specific to the runtime type.")
  public String getInitCode() {
    return initCode;
  }

  public void setInitCode(String initCode) {
    this.initCode = initCode;
  }

  public WebService code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code to execute. Specific to the runtime type.
   * @return code
  **/
  @ApiModelProperty(value = "Code to execute. Specific to the runtime type.")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public WebService description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the web service.
   * @return description
  **/
  @ApiModelProperty(value = "Description of the web service.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public WebService operationId(String operationId) {
    this.operationId = operationId;
    return this;
  }

   /**
   * Swagger operationId/alias for the web service.
   * @return operationId
  **/
  @ApiModelProperty(value = "Swagger operationId/alias for the web service.")
  public String getOperationId() {
    return operationId;
  }

  public void setOperationId(String operationId) {
    this.operationId = operationId;
  }

  public WebService inputParameterDefinitions(List<ParameterDefinition> inputParameterDefinitions) {
    this.inputParameterDefinitions = inputParameterDefinitions;
    return this;
  }

  public WebService addInputParameterDefinitionsItem(ParameterDefinition inputParameterDefinitionsItem) {
    if (this.inputParameterDefinitions == null) {
      this.inputParameterDefinitions = new ArrayList<ParameterDefinition>();
    }
    this.inputParameterDefinitions.add(inputParameterDefinitionsItem);
    return this;
  }

   /**
   * Input parameters definitions for the execution
   * @return inputParameterDefinitions
  **/
  @ApiModelProperty(value = "Input parameters definitions for the execution")
  public List<ParameterDefinition> getInputParameterDefinitions() {
    return inputParameterDefinitions;
  }

  public void setInputParameterDefinitions(List<ParameterDefinition> inputParameterDefinitions) {
    this.inputParameterDefinitions = inputParameterDefinitions;
  }

  public WebService outputParameterDefinitions(List<ParameterDefinition> outputParameterDefinitions) {
    this.outputParameterDefinitions = outputParameterDefinitions;
    return this;
  }

  public WebService addOutputParameterDefinitionsItem(ParameterDefinition outputParameterDefinitionsItem) {
    if (this.outputParameterDefinitions == null) {
      this.outputParameterDefinitions = new ArrayList<ParameterDefinition>();
    }
    this.outputParameterDefinitions.add(outputParameterDefinitionsItem);
    return this;
  }

   /**
   * Output parameter definitions for the execution
   * @return outputParameterDefinitions
  **/
  @ApiModelProperty(value = "Output parameter definitions for the execution")
  public List<ParameterDefinition> getOutputParameterDefinitions() {
    return outputParameterDefinitions;
  }

  public void setOutputParameterDefinitions(List<ParameterDefinition> outputParameterDefinitions) {
    this.outputParameterDefinitions = outputParameterDefinitions;
  }

  public WebService outputFileNames(List<String> outputFileNames) {
    this.outputFileNames = outputFileNames;
    return this;
  }

  public WebService addOutputFileNamesItem(String outputFileNamesItem) {
    if (this.outputFileNames == null) {
      this.outputFileNames = new ArrayList<String>();
    }
    this.outputFileNames.add(outputFileNamesItem);
    return this;
  }

   /**
   * Files that are returned by the request
   * @return outputFileNames
  **/
  @ApiModelProperty(value = "Files that are returned by the request")
  public List<String> getOutputFileNames() {
    return outputFileNames;
  }

  public void setOutputFileNames(List<String> outputFileNames) {
    this.outputFileNames = outputFileNames;
  }

  public WebService myPermissionOnService(String myPermissionOnService) {
    this.myPermissionOnService = myPermissionOnService;
    return this;
  }

   /**
   * User&#39;s permission for this service, it is either &#39;read/write&#39; or &#39;read only&#39;.&#39;read/write&#39; means that the user can update/delete this service and &#39;read only&#39; means that the user can consume it only.
   * @return myPermissionOnService
  **/
  @ApiModelProperty(value = "User's permission for this service, it is either 'read/write' or 'read only'.'read/write' means that the user can update/delete this service and 'read only' means that the user can consume it only.")
  public String getMyPermissionOnService() {
    return myPermissionOnService;
  }

  public void setMyPermissionOnService(String myPermissionOnService) {
    this.myPermissionOnService = myPermissionOnService;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebService webService = (WebService) o;
    return Objects.equals(this.name, webService.name) &&
        Objects.equals(this.version, webService.version) &&
        Objects.equals(this.versionPublishedBy, webService.versionPublishedBy) &&
        Objects.equals(this.creationTime, webService.creationTime) &&
        Objects.equals(this.snapshotId, webService.snapshotId) &&
        Objects.equals(this.runtimeType, webService.runtimeType) &&
        Objects.equals(this.initCode, webService.initCode) &&
        Objects.equals(this.code, webService.code) &&
        Objects.equals(this.description, webService.description) &&
        Objects.equals(this.operationId, webService.operationId) &&
        Objects.equals(this.inputParameterDefinitions, webService.inputParameterDefinitions) &&
        Objects.equals(this.outputParameterDefinitions, webService.outputParameterDefinitions) &&
        Objects.equals(this.outputFileNames, webService.outputFileNames) &&
        Objects.equals(this.myPermissionOnService, webService.myPermissionOnService);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, version, versionPublishedBy, creationTime, snapshotId, runtimeType, initCode, code, description, operationId, inputParameterDefinitions, outputParameterDefinitions, outputFileNames, myPermissionOnService);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebService {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    versionPublishedBy: ").append(toIndentedString(versionPublishedBy)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    snapshotId: ").append(toIndentedString(snapshotId)).append("\n");
    sb.append("    runtimeType: ").append(toIndentedString(runtimeType)).append("\n");
    sb.append("    initCode: ").append(toIndentedString(initCode)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    operationId: ").append(toIndentedString(operationId)).append("\n");
    sb.append("    inputParameterDefinitions: ").append(toIndentedString(inputParameterDefinitions)).append("\n");
    sb.append("    outputParameterDefinitions: ").append(toIndentedString(outputParameterDefinitions)).append("\n");
    sb.append("    outputFileNames: ").append(toIndentedString(outputFileNames)).append("\n");
    sb.append("    myPermissionOnService: ").append(toIndentedString(myPermissionOnService)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

