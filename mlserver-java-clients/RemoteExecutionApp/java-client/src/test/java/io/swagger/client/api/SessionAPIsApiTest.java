/*
 * DeployRClient
 * Integration technology for deploying R and Python analytics inside web, desktop, mobile, and dashboard applications as well as backend systems. Turn your R or Python scripts into analytics web services, so code can be easily executed by applications running on a secure server.  The core APIs can be grouped into several categories, including: [Authentication](#authentication-apis), [Web Services](#services-management-apis), [Sessions](#session-apis), [Snapshots](#snapshot-apis), [Status](#status-apis), and [Centralized Configuration](#centralized-configuration-apis). 
 *
 * OpenAPI spec version: 9.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ConsoleOutputResponse;
import io.swagger.client.model.CreateSessionRequest;
import io.swagger.client.model.CreateSessionResponse;
import io.swagger.client.model.Error;
import io.swagger.client.model.ExecuteRequest;
import io.swagger.client.model.ExecuteResponse;
import java.io.File;
import io.swagger.client.model.Session;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SessionAPIsApi
 */
@Ignore
public class SessionAPIsApiTest {

    private final SessionAPIsApi api = new SessionAPIsApi();

    
    /**
     * Cancel Session
     *
     * Cancel a session by aborting the current execution operation, afterwards the session will be alive and ready to accept any calls. Cancel session is **not** guaranteed to interrupt the execution
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cancelSessionTest() throws ApiException {
        String id = null;
        String response = api.cancelSession(id);

        // TODO: test validations
    }
    
    /**
     * Delete Session
     *
     * Close a session and releases all it&#39;s associated resources.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void closeSessionTest() throws ApiException {
        String id = null;
        String response = api.closeSession(id);

        // TODO: test validations
    }
    
    /**
     * Delete Session by &#x60;force&#x60;
     *
     * Attempt to _kill_ a session and releases all it&#39;s associated resources.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void closeSessionByForceTest() throws ApiException {
        String id = null;
        String response = api.closeSessionByForce(id);

        // TODO: test validations
    }
    
    /**
     * Create Session
     *
     * Create a new session.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSessionTest() throws ApiException {
        CreateSessionRequest createSessionRequest = null;
        CreateSessionResponse response = api.createSession(createSessionRequest);

        // TODO: test validations
    }
    
    /**
     * Delete File
     *
     * Delete a file from a session&#39;s working directory.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSessionFileTest() throws ApiException {
        String id = null;
        String fileName = null;
        api.deleteSessionFile(id, fileName);

        // TODO: test validations
    }
    
    /**
     * Delete Workspace Object
     *
     * Delete an object from a session.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteWorkspaceObjectTest() throws ApiException {
        String id = null;
        String objectName = null;
        api.deleteWorkspaceObject(id, objectName);

        // TODO: test validations
    }
    
    /**
     * Execute Code
     *
     * Executes code in the context of a specific session.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void executeCodeTest() throws ApiException {
        String id = null;
        ExecuteRequest executeRequest = null;
        ExecuteResponse response = api.executeCode(id, executeRequest);

        // TODO: test validations
    }
    
    /**
     * Get Console Output
     *
     * Returns the console output for the current or last execution.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSessionConsoleOutputTest() throws ApiException {
        String id = null;
        ConsoleOutputResponse response = api.getSessionConsoleOutput(id);

        // TODO: test validations
    }
    
    /**
     * Get File
     *
     * Downloads a file from a session as a stream.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSessionFileTest() throws ApiException {
        String id = null;
        String fileName = null;
        File response = api.getSessionFile(id, fileName);

        // TODO: test validations
    }
    
    /**
     * Get Workspace Object
     *
     * Returns an object from a session. For the &#x60;R&#x60; runtime, the object is serialized as a &#x60;.RData&#x60; file stream. For the &#x60;Python&#x60; runtime, the object is serialized as a &#x60;.dill&#x60; file stream.  **Important** Python objects are not guaranteed to be compatible with versions other than Python &#x60;3.5&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWorkspaceObjectTest() throws ApiException {
        String id = null;
        String objectName = null;
        File response = api.getWorkspaceObject(id, objectName);

        // TODO: test validations
    }
    
    /**
     * Get Files
     *
     * Lists all files of a specific session.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSessionFilesTest() throws ApiException {
        String id = null;
        List<String> response = api.listSessionFiles(id);

        // TODO: test validations
    }
    
    /**
     * Get History
     *
     * Lists all history for a specific session.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSessionHistoryTest() throws ApiException {
        String id = null;
        List<String> response = api.listSessionHistory(id);

        // TODO: test validations
    }
    
    /**
     * Get Sessions
     *
     * Lists all existing sessions for the current user.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSessionsTest() throws ApiException {
        List<Session> response = api.listSessions();

        // TODO: test validations
    }
    
    /**
     * Get Workspace Object Names
     *
     * Lists all object names of a specific session.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listWorkspaceObjectsTest() throws ApiException {
        String id = null;
        List<String> response = api.listWorkspaceObjects(id);

        // TODO: test validations
    }
    
    /**
     * Create Workspace Object
     *
     * Upload a serialized object into the session.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setWorkspaceObjectTest() throws ApiException {
        String id = null;
        String objectName = null;
        byte[] serializedObject = null;
        api.setWorkspaceObject(id, objectName, serializedObject);

        // TODO: test validations
    }
    
    /**
     * Load File
     *
     * Loads a file into the session working directory. The uploaded file name is extracted from the file and if another file with the same name already exists in the working directory, the file will be overwritten.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadSessionFileTest() throws ApiException {
        String id = null;
        File file = null;
        api.uploadSessionFile(id, file);

        // TODO: test validations
    }
    
}
