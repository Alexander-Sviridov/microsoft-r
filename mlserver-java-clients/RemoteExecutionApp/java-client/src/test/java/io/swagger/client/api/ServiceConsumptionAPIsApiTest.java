/*
 * DeployRClient
 * Integration technology for deploying R and Python analytics inside web, desktop, mobile, and dashboard applications as well as backend systems. Turn your R or Python scripts into analytics web services, so code can be easily executed by applications running on a secure server.  The core APIs can be grouped into several categories, including: [Authentication](#authentication-apis), [Web Services](#services-management-apis), [Sessions](#session-apis), [Snapshots](#snapshot-apis), [Status](#status-apis), and [Centralized Configuration](#centralized-configuration-apis). 
 *
 * OpenAPI spec version: 9.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Error;
import io.swagger.client.model.SwaggerJsonResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServiceConsumptionAPIsApi
 */
@Ignore
public class ServiceConsumptionAPIsApiTest {

    private final ServiceConsumptionAPIsApi api = new ServiceConsumptionAPIsApi();

    
    /**
     * Get API Swagger
     *
     * Returns a _Swagger_ &#x60;swagger.json&#x60; describing a published web service&#39;s API capabilities.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWebServiceSwaggerTest() throws ApiException {
        String name = null;
        String version = null;
        //SwaggerJsonResponse response = api.getWebServiceSwagger(name, version);

        // TODO: test validations
    }
    
}
