/**
 * ImageClassification
 * service for image classification
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessTokenResponse', 'model/BatchWebServiceResult', 'model/Error', 'model/InputParameters', 'model/LoginRequest', 'model/OutputParameters', 'model/RenewTokenRequest', 'model/StartBatchExecutionResponse', 'model/WebServiceResult', 'api/ImageClassificationApi', 'api/UserApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccessTokenResponse'), require('./model/BatchWebServiceResult'), require('./model/Error'), require('./model/InputParameters'), require('./model/LoginRequest'), require('./model/OutputParameters'), require('./model/RenewTokenRequest'), require('./model/StartBatchExecutionResponse'), require('./model/WebServiceResult'), require('./api/ImageClassificationApi'), require('./api/UserApi'));
  }
}(function(ApiClient, AccessTokenResponse, BatchWebServiceResult, Error, InputParameters, LoginRequest, OutputParameters, RenewTokenRequest, StartBatchExecutionResponse, WebServiceResult, ImageClassificationApi, UserApi) {
  'use strict';

  /**
   * service_for_image_classification.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var ImageClassification = require('index'); // See note below*.
   * var xxxSvc = new ImageClassification.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new ImageClassification.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new ImageClassification.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new ImageClassification.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccessTokenResponse model constructor.
     * @property {module:model/AccessTokenResponse}
     */
    AccessTokenResponse: AccessTokenResponse,
    /**
     * The BatchWebServiceResult model constructor.
     * @property {module:model/BatchWebServiceResult}
     */
    BatchWebServiceResult: BatchWebServiceResult,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The InputParameters model constructor.
     * @property {module:model/InputParameters}
     */
    InputParameters: InputParameters,
    /**
     * The LoginRequest model constructor.
     * @property {module:model/LoginRequest}
     */
    LoginRequest: LoginRequest,
    /**
     * The OutputParameters model constructor.
     * @property {module:model/OutputParameters}
     */
    OutputParameters: OutputParameters,
    /**
     * The RenewTokenRequest model constructor.
     * @property {module:model/RenewTokenRequest}
     */
    RenewTokenRequest: RenewTokenRequest,
    /**
     * The StartBatchExecutionResponse model constructor.
     * @property {module:model/StartBatchExecutionResponse}
     */
    StartBatchExecutionResponse: StartBatchExecutionResponse,
    /**
     * The WebServiceResult model constructor.
     * @property {module:model/WebServiceResult}
     */
    WebServiceResult: WebServiceResult,
    /**
     * The ImageClassificationApi service constructor.
     * @property {module:api/ImageClassificationApi}
     */
    ImageClassificationApi: ImageClassificationApi,
    /**
     * The UserApi service constructor.
     * @property {module:api/UserApi}
     */
    UserApi: UserApi
  };

  return exports;
}));
